// This source code was auto-generated by ToLua#, do not modify it
using System;
using LuaInterface;

public class Nova_SelectionOccursData_SelectionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.SelectionOccursData.Selection), typeof(System.Object));
		L.RegFunction("New", _CreateNova_SelectionOccursData_Selection);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("texts", get_texts, null);
		L.RegVar("imageInfo", get_imageInfo, null);
		L.RegVar("interactable", get_interactable, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNova_SelectionOccursData_Selection(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<System.Collections.Generic.Dictionary<UnityEngine.SystemLanguage,string>, Nova.BranchImageInformation, bool>(L, 1))
			{
				System.Collections.Generic.Dictionary<UnityEngine.SystemLanguage,string> arg0 = (System.Collections.Generic.Dictionary<UnityEngine.SystemLanguage,string>)ToLua.ToObject(L, 1);
				Nova.BranchImageInformation arg1 = (Nova.BranchImageInformation)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				Nova.SelectionOccursData.Selection obj = new Nova.SelectionOccursData.Selection(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, Nova.BranchImageInformation, bool>(L, 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				Nova.BranchImageInformation arg1 = (Nova.BranchImageInformation)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				Nova.SelectionOccursData.Selection obj = new Nova.SelectionOccursData.Selection(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Nova.SelectionOccursData.Selection.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_texts(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.SelectionOccursData.Selection obj = (Nova.SelectionOccursData.Selection)o;
			System.Collections.Generic.Dictionary<UnityEngine.SystemLanguage,string> ret = obj.texts;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index texts on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_imageInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.SelectionOccursData.Selection obj = (Nova.SelectionOccursData.Selection)o;
			Nova.BranchImageInformation ret = obj.imageInfo;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index imageInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interactable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.SelectionOccursData.Selection obj = (Nova.SelectionOccursData.Selection)o;
			bool ret = obj.interactable;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interactable on a nil value");
		}
	}
}

