// This source code was auto-generated by ToLua#, do not modify it
using System;
using LuaInterface;

public class Nova_DialogueActionStageWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Nova.DialogueActionStage));
		L.RegVar("BeforeCheckpoint", get_BeforeCheckpoint, null);
		L.RegVar("Default", get_Default, null);
		L.RegVar("AfterDialogue", get_AfterDialogue, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Nova.DialogueActionStage>.Check = CheckType;
		StackTraits<Nova.DialogueActionStage>.Push = Push;
	}

	static void Push(IntPtr L, Nova.DialogueActionStage arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Nova.DialogueActionStage), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BeforeCheckpoint(IntPtr L)
	{
		ToLua.Push(L, Nova.DialogueActionStage.BeforeCheckpoint);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Default(IntPtr L)
	{
		ToLua.Push(L, Nova.DialogueActionStage.Default);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AfterDialogue(IntPtr L)
	{
		ToLua.Push(L, Nova.DialogueActionStage.AfterDialogue);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Nova.DialogueActionStage o = (Nova.DialogueActionStage)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

