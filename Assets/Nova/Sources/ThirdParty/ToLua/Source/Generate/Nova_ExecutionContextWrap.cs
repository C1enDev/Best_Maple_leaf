// This source code was auto-generated by ToLua#, do not modify it
using System;
using LuaInterface;

public class Nova_ExecutionContextWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.ExecutionContext), typeof(System.Object));
		L.RegFunction("New", _CreateNova_ExecutionContext);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mode", get_mode, null);
		L.RegVar("stage", get_stage, null);
		L.RegVar("isRestoring", get_isRestoring, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNova_ExecutionContext(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				Nova.ExecutionMode arg0 = (Nova.ExecutionMode)ToLua.CheckObject(L, 1, typeof(Nova.ExecutionMode));
				Nova.DialogueActionStage arg1 = (Nova.DialogueActionStage)ToLua.CheckObject(L, 2, typeof(Nova.DialogueActionStage));
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				Nova.ExecutionContext obj = new Nova.ExecutionContext(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Nova.ExecutionContext.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.ExecutionContext obj = (Nova.ExecutionContext)o;
			Nova.ExecutionMode ret = obj.mode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.ExecutionContext obj = (Nova.ExecutionContext)o;
			Nova.DialogueActionStage ret = obj.stage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isRestoring(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.ExecutionContext obj = (Nova.ExecutionContext)o;
			bool ret = obj.isRestoring;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isRestoring on a nil value");
		}
	}
}

