// This source code was auto-generated by ToLua#, do not modify it
using System;
using LuaInterface;

public class Nova_AvatarControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nova.AvatarController), typeof(Nova.CompositeSpriteController));
		L.RegFunction("SetCharacterName", SetCharacterName);
		L.RegFunction("GetCharacterController", GetCharacterController);
		L.RegFunction("SetPoseDelayed", SetPoseDelayed);
		L.RegFunction("SetImageDelayed", SetImageDelayed);
		L.RegFunction("ClearImageDelayed", ClearImageDelayed);
		L.RegFunction("UpdateImage", UpdateImage);
		L.RegFunction("ResetAll", ResetAll);
		L.RegFunction("GetRestoreData", GetRestoreData);
		L.RegFunction("Restore", Restore);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("textPaddingOrZero", get_textPaddingOrZero, null);
		L.RegVar("renderToCamera", get_renderToCamera, null);
		L.RegVar("renderTexture", get_renderTexture, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCharacterName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetCharacterName(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCharacterController(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			Nova.GameCharacterController o = obj.GetCharacterController();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPoseDelayed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetPoseDelayed(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetImageDelayed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetImageDelayed(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearImageDelayed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			obj.ClearImageDelayed();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateImage(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
				obj.UpdateImage();
				return 0;
			}
			else if (count == 2)
			{
				Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.UpdateImage(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Nova.AvatarController.UpdateImage");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			obj.ResetAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRestoreData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			Nova.IRestoreData o = obj.GetRestoreData();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Restore(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Nova.AvatarController obj = (Nova.AvatarController)ToLua.CheckObject<Nova.AvatarController>(L, 1);
			Nova.IRestoreData arg0 = (Nova.IRestoreData)ToLua.CheckObject<Nova.IRestoreData>(L, 2);
			obj.Restore(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_textPaddingOrZero(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)o;
			int ret = obj.textPaddingOrZero;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index textPaddingOrZero on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_renderToCamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)o;
			bool ret = obj.renderToCamera;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderToCamera on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_renderTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Nova.AvatarController obj = (Nova.AvatarController)o;
			UnityEngine.RenderTexture ret = obj.renderTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderTexture on a nil value");
		}
	}
}

